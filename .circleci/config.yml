executors:
  node:
    parameters:
      image:
        type: string
        default: "10"
    docker:
    - image: circleci/node:<< parameters.image >>

aliases:
  restore_cache: &restore_cache
    restore_cache:
      name: Restore Npm Package Cache
      keys:
      - v{{ .Environment.versionCache }}-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}-{{ checksum ".circleci/config.yml" }}

  install_node_modules: &install_node_modules
    run:
      name: Install NPM dependencies
      command: npm install

  save_cache: &save_cache
    save_cache:
      name: Save NPM package cache
      key: v{{ .Environment.versionCache }}-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}-{{ checksum ".circleci/config.yml" }}
      paths:
      - /home/circleci/.cache

  store_build_artifacts: &store_build_artifacts
    store_artifacts:
      path: public

version: 2.1

jobs:
  build:
    executor: node
    steps:
    - checkout
    - <<: *restore_cache
    - <<: *install_node_modules
    - <<: *save_cache
  lint:
    executor: node
    steps:
    - checkout
    - <<: *restore_cache
    - <<: *install_node_modules
    - run:
        name: Run ESLint
        command: npm run eslint
    - <<: *store_build_artifacts
  deploy:
    executor: node
    steps:
    - checkout
    - <<: *restore_cache
    - <<: *install_node_modules
    - run:
        name: install netlify cli
        command: sudo npm install netlify-cli -g
    - run: 
        name: deploy site to netlify
        command: netlify deploy


workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - lint:
          requires:
            - build
      - deploy:
          context: GatsbyNetlify
          requires:
            - lint